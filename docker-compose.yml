version: '3.9'
  
volumes:
  nginx-shared:

services:

  # Safe Transaction Service
  hardhat:
    image: ethereumoptimism/hardhat:latest
    ports:
      - 8545:8545

  nginx-txs:
    image: nginx:alpine
    hostname: nginx
    ports:
      - ${TXS_PORT}:8001
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - nginx-shared:/nginx
    depends_on:
      - txs

  redis-txs:
    image: redis:alpine

  db-txs:
    image: postgres:10-alpine
    environment:
      POSTGRES_PASSWORD: postgres

  txs:
    image: gnosispm/safe-transaction-service:${TXS_VERSION}
    env_file:
      - container_env_files/txs.env
    depends_on:
      - db-txs
      - redis-txs
    working_dir: /app
    ports:
      - 8888:8888
    volumes:
      - nginx-shared:/nginx
    command: docker/web/run_web.sh

  worker: &worker
    image: gnosispm/safe-transaction-service:${TXS_VERSION}
    env_file:
      - container_env_files/txs.env
    depends_on:
      - db-txs
      - redis-txs
    command: docker/web/celery/worker/run.sh

  scheduler:
    <<: *worker
    command: docker/web/celery/scheduler/run.sh  

  # Safe Config Service
  nginx:
    image: nginx:1.20-alpine
    env_file:
      - container_env_files/cfg.env
    ports:
      - "${NGINX_HOST_PORT}:80"
    volumes:
      - ./nginx/templates:/etc/nginx/templates
      - nginx-shared:${DOCKER_NGINX_VOLUME_ROOT_CFG}
    depends_on:
      - cfg-web
  
  db:
    image: postgres:13-alpine
    env_file:
      - container_env_files/cfg.env
    volumes:
      - ./data/db:/var/lib/postgresql/data

  cfg-web:
    image: gnosispm/safe-config-service:${CFG_VERSION}
    tty: true
    volumes:
      - nginx-shared:${DOCKER_NGINX_VOLUME_ROOT_CFG}
    env_file:
      - container_env_files/cfg.env
    depends_on:
      - db
  
  # Safe Client Gateway
  redis:
    image: redis:5-alpine

  cgw:
    image: gnosispm/safe-client-gateway:${CGW_VERSION}
    env_file:
      - container_env_files/cgw.env
    depends_on:
      - redis
    ports:
      - ${CGW_PORT}:3666
